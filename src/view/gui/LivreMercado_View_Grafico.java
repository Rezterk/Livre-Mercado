/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.gui;

import java.awt.Color;
import java.text.NumberFormat;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import model.Fabrica;
import model.LivreMercado;
import model.autenticador.Autenticacao;
import model.autenticador.Credencial_if;
import model.categoria_produto.Categoria;
import model.categoria_produto.Produto;
import model.cliente.Cliente;
import model.fabrica.Fabrica_Grafica;
import view.Cliente_Table_View;
import view.Credencial_View;
import view.LivreMercado_View;

/**
 *
 * @author rafael.cancian
 */
public class LivreMercado_View_Grafico extends javax.swing.JFrame implements LivreMercado_View {

    /**
     * Creates new form NewJFrame
     *
     * @param model
     */
    public LivreMercado_View_Grafico(LivreMercado model) {
        initComponents();
        this.model = model;
        atualizaArvoreCategorias();
        panelProduto.setBackground(Color.white);
        textDescricao.setBackground(panelProduto.getBackground());
        jScrollPane1.setBorder(null);
        textDescricao.setBorder(null);
        panelProduto.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        splitPrincipalVertical = new javax.swing.JSplitPane();
        panelTopBar = new javax.swing.JPanel();
        labelLivreMercado = new javax.swing.JLabel();
        labelLivreMercadoIcon = new javax.swing.JLabel();
        textPesquisaProdutos = new javax.swing.JTextField();
        painelSplitPrincipal = new javax.swing.JSplitPane();
        painelScrollPrincipal = new javax.swing.JScrollPane();
        panelProduto = new javax.swing.JPanel();
        labelNomeProduto = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textDescricao = new javax.swing.JTextArea();
        labelPreco = new javax.swing.JLabel();
        labelCategoria = new javax.swing.JLabel();
        labelVendedor = new javax.swing.JLabel();
        painelScrollEsquerdo = new javax.swing.JScrollPane();
        arvoreCategorias = new javax.swing.JTree();
        menuPrincipal = new javax.swing.JMenuBar();
        menuSistema = new javax.swing.JMenu();
        itemSistemaCarregar = new javax.swing.JMenuItem();
        itemSistemaSalvar = new javax.swing.JMenuItem();
        itemSistemaAutenticar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        itemSistemaSair = new javax.swing.JMenuItem();
        menuMercado = new javax.swing.JMenu();
        itemMercadoClientes = new javax.swing.JMenuItem();
        itemMercadoCategorias = new javax.swing.JMenuItem();
        itemMercadoProdutos = new javax.swing.JMenuItem();
        menuSobre = new javax.swing.JMenu();

        FormListener formListener = new FormListener();

        jMenuItem3.setText("jMenuItem3");

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LivreMercado");
        addWindowListener(formListener);

        splitPrincipalVertical.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        labelLivreMercado.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        labelLivreMercado.setText("LivreMercado Topbar");

        labelLivreMercadoIcon.setText("Icon");

        textPesquisaProdutos.addActionListener(formListener);

        javax.swing.GroupLayout panelTopBarLayout = new javax.swing.GroupLayout(panelTopBar);
        panelTopBar.setLayout(panelTopBarLayout);
        panelTopBarLayout.setHorizontalGroup(
            panelTopBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTopBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTopBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTopBarLayout.createSequentialGroup()
                        .addComponent(labelLivreMercadoIcon)
                        .addGap(18, 18, 18)
                        .addComponent(textPesquisaProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelLivreMercado, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelTopBarLayout.setVerticalGroup(
            panelTopBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTopBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelLivreMercado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTopBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLivreMercadoIcon)
                    .addComponent(textPesquisaProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        splitPrincipalVertical.setLeftComponent(panelTopBar);

        labelNomeProduto.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelNomeProduto.setText("Nome Produto");

        jLabel3.setText("Descrição:");

        textDescricao.setEditable(false);
        textDescricao.setColumns(20);
        textDescricao.setRows(5);
        textDescricao.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(textDescricao);

        labelPreco.setText("Preço: ");

        labelCategoria.setText("Categoria:");

        labelVendedor.setText("Vendedor:");

        javax.swing.GroupLayout panelProdutoLayout = new javax.swing.GroupLayout(panelProduto);
        panelProduto.setLayout(panelProdutoLayout);
        panelProdutoLayout.setHorizontalGroup(
            panelProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelProdutoLayout.createSequentialGroup()
                        .addGroup(panelProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelNomeProduto)
                            .addGroup(panelProdutoLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(panelProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelPreco)
                                    .addComponent(labelCategoria)
                                    .addComponent(labelVendedor)))
                            .addComponent(jLabel3))
                        .addGap(0, 631, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelProdutoLayout.setVerticalGroup(
            panelProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelNomeProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(labelCategoria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelPreco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelVendedor)
                .addContainerGap(352, Short.MAX_VALUE))
        );

        painelScrollPrincipal.setViewportView(panelProduto);

        painelSplitPrincipal.setRightComponent(painelScrollPrincipal);

        painelScrollEsquerdo.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        painelScrollEsquerdo.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        arvoreCategorias.setModel(null);
        arvoreCategorias.setPreferredSize(new java.awt.Dimension(150, 78));
        arvoreCategorias.addMouseListener(formListener);
        arvoreCategorias.addTreeSelectionListener(formListener);
        painelScrollEsquerdo.setViewportView(arvoreCategorias);

        painelSplitPrincipal.setLeftComponent(painelScrollEsquerdo);

        splitPrincipalVertical.setBottomComponent(painelSplitPrincipal);

        menuSistema.setText("Sistema");

        itemSistemaCarregar.setText("Carregar");
        itemSistemaCarregar.addActionListener(formListener);
        menuSistema.add(itemSistemaCarregar);

        itemSistemaSalvar.setText("Salvar");
        itemSistemaSalvar.addActionListener(formListener);
        menuSistema.add(itemSistemaSalvar);

        itemSistemaAutenticar.setText("Autenticar");
        itemSistemaAutenticar.addActionListener(formListener);
        menuSistema.add(itemSistemaAutenticar);
        menuSistema.add(jSeparator1);

        itemSistemaSair.setText("Sair");
        itemSistemaSair.addActionListener(formListener);
        menuSistema.add(itemSistemaSair);

        menuPrincipal.add(menuSistema);

        menuMercado.setText("Mercado");

        itemMercadoClientes.setText("Clientes");
        itemMercadoClientes.addActionListener(formListener);
        menuMercado.add(itemMercadoClientes);

        itemMercadoCategorias.setText("Categorias");
        itemMercadoCategorias.addActionListener(formListener);
        menuMercado.add(itemMercadoCategorias);

        itemMercadoProdutos.setText("Produtos");
        itemMercadoProdutos.addActionListener(formListener);
        menuMercado.add(itemMercadoProdutos);

        menuPrincipal.add(menuMercado);

        menuSobre.setText("Sobre");
        menuPrincipal.add(menuSobre);

        setJMenuBar(menuPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(splitPrincipalVertical)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(splitPrincipalVertical)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("framePrincipal");

        pack();
        setLocationRelativeTo(null);
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.MouseListener, java.awt.event.WindowListener, javax.swing.event.TreeSelectionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == textPesquisaProdutos) {
                LivreMercado_View_Grafico.this.textPesquisaProdutosActionPerformed(evt);
            }
            else if (evt.getSource() == itemSistemaCarregar) {
                LivreMercado_View_Grafico.this.itemSistemaCarregarActionPerformed(evt);
            }
            else if (evt.getSource() == itemSistemaSalvar) {
                LivreMercado_View_Grafico.this.itemSistemaSalvarActionPerformed(evt);
            }
            else if (evt.getSource() == itemSistemaAutenticar) {
                LivreMercado_View_Grafico.this.itemSistemaAutenticarActionPerformed(evt);
            }
            else if (evt.getSource() == itemSistemaSair) {
                LivreMercado_View_Grafico.this.itemSistemaSairActionPerformed(evt);
            }
            else if (evt.getSource() == itemMercadoClientes) {
                LivreMercado_View_Grafico.this.itemMercadoClientesActionPerformed(evt);
            }
            else if (evt.getSource() == itemMercadoCategorias) {
                LivreMercado_View_Grafico.this.itemMercadoCategoriasActionPerformed(evt);
            }
            else if (evt.getSource() == itemMercadoProdutos) {
                LivreMercado_View_Grafico.this.itemMercadoProdutosActionPerformed(evt);
            }
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == arvoreCategorias) {
                LivreMercado_View_Grafico.this.arvoreCategoriasMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
        }

        public void windowActivated(java.awt.event.WindowEvent evt) {
        }

        public void windowClosed(java.awt.event.WindowEvent evt) {
        }

        public void windowClosing(java.awt.event.WindowEvent evt) {
        }

        public void windowDeactivated(java.awt.event.WindowEvent evt) {
        }

        public void windowDeiconified(java.awt.event.WindowEvent evt) {
        }

        public void windowIconified(java.awt.event.WindowEvent evt) {
        }

        public void windowOpened(java.awt.event.WindowEvent evt) {
            if (evt.getSource() == LivreMercado_View_Grafico.this) {
                LivreMercado_View_Grafico.this.formWindowOpened(evt);
            }
        }

        public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
            if (evt.getSource() == arvoreCategorias) {
                LivreMercado_View_Grafico.this.arvoreCategoriasValueChanged(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if (model.getAutenticador().getAutenticacao() == null) {
            itemSistemaAutenticarActionPerformed(null);
        } else {
            // já se autenticou
            // mostra menu
        }
    }//GEN-LAST:event_formWindowOpened

    private void itemSistemaCarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSistemaCarregarActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Essa funcionalidade ainda nao foi implementada", "Ops...", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_itemSistemaCarregarActionPerformed

    private void itemSistemaSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSistemaSalvarActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Essa funcionalidade ainda nao foi implementada", "Ops...", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_itemSistemaSalvarActionPerformed

    private void itemSistemaSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSistemaSairActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Essa funcionalidade ainda nao foi implementada", "Ops...", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_itemSistemaSairActionPerformed

    private void itemMercadoClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMercadoClientesActionPerformed
        //Cliente_View clienteView = ((Fabrica_Grafica) Fabrica.GetViewFabricaConcreta()).new_Cliente_View(this, true, null);
        //clienteView.mostre();
        //Cliente novoCliente = clienteView.getModel();
        //if (novoCliente != null) {
        //    JOptionPane.showMessageDialog(this, "Novo cliente foi criado", "Cliente", JOptionPane.PLAIN_MESSAGE);
        //    model.adicionarCliente(novoCliente);
        //}
        Cliente_Table_View clienteView = ((Fabrica_Grafica) Fabrica.GetViewFabricaConcreta()).new_Cliente_Table_View(this, true, model.getClientes());
        clienteView.mostre();
    }//GEN-LAST:event_itemMercadoClientesActionPerformed

    private void itemMercadoCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMercadoCategoriasActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Essa funcionalidade ainda nao foi implementada", "Ops...", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_itemMercadoCategoriasActionPerformed

    private void itemMercadoProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMercadoProdutosActionPerformed
        // TODO add your handling code here:
        // atualizaArvoreCategorias();
        JOptionPane.showMessageDialog(this, "Essa funcionalidade ainda nao foi implementada", "Ops...", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_itemMercadoProdutosActionPerformed

    private void textPesquisaProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPesquisaProdutosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPesquisaProdutosActionPerformed

    private void itemSistemaAutenticarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSistemaAutenticarActionPerformed
        Credencial_View credencialView = ((Fabrica_Grafica) Fabrica.GetViewFabricaConcreta()).new_Credencial_View(this, true, null);
        credencialView.setCredencial();
        if (credencialView.getModel() == null) {
            //System.out.println("Sua credencial nao foi criada");
            JOptionPane.showMessageDialog(this, "Sua credencial nao foi criada", "Credencial", JOptionPane.WARNING_MESSAGE);
        } else {
            Credencial_if credencial = credencialView.getModel();
            autenticacao = model.getAutenticador().autentique_se(credencial);
            if (autenticacao == null) {
                //System.out.println("Autenticacao falhou");
                JOptionPane.showMessageDialog(this, "Autenticacao falhou", "Autenticacao", JOptionPane.WARNING_MESSAGE);
            } else {
                //System.out.println("Voce se autenticou com sucesso");
                JOptionPane.showMessageDialog(this, "Voce se autenticou com sucesso", "Autenticacao", JOptionPane.PLAIN_MESSAGE);
            }
        }
        atualizeMenu();
    }//GEN-LAST:event_itemSistemaAutenticarActionPerformed

    private void arvoreCategoriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arvoreCategoriasMouseClicked

    }//GEN-LAST:event_arvoreCategoriasMouseClicked

    private void arvoreCategoriasValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_arvoreCategoriasValueChanged
        DefaultMutableTreeNode noSelecionado = (DefaultMutableTreeNode) arvoreCategorias.getLastSelectedPathComponent();
        
        if (noSelecionado != null) {
            if (noSelecionado.isLeaf()) {
                Produto produto = (Produto) noSelecionado.getUserObject();
                labelNomeProduto.setText(produto.getNome());
                textDescricao.setText(produto.getDescricao());
                labelCategoria.setText("Categoria: " + produto.getCategoria().getNome());
                NumberFormat formato = NumberFormat.getCurrencyInstance();
                labelPreco.setText("Preco: " + formato.format(produto.getPrecoBase()));
                labelVendedor.setText("Vendedor: " + produto.getVendedor().getNome());
                panelProduto.setVisible(true);
            }
        }
    }//GEN-LAST:event_arvoreCategoriasValueChanged

    @Override
    public void mostre() {
        setVisible(true);
    }

    private final LivreMercado model;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree arvoreCategorias;
    private javax.swing.JMenuItem itemMercadoCategorias;
    private javax.swing.JMenuItem itemMercadoClientes;
    private javax.swing.JMenuItem itemMercadoProdutos;
    private javax.swing.JMenuItem itemSistemaAutenticar;
    private javax.swing.JMenuItem itemSistemaCarregar;
    private javax.swing.JMenuItem itemSistemaSair;
    private javax.swing.JMenuItem itemSistemaSalvar;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel labelCategoria;
    private javax.swing.JLabel labelLivreMercado;
    private javax.swing.JLabel labelLivreMercadoIcon;
    private javax.swing.JLabel labelNomeProduto;
    private javax.swing.JLabel labelPreco;
    private javax.swing.JLabel labelVendedor;
    private javax.swing.JMenu menuMercado;
    private javax.swing.JMenuBar menuPrincipal;
    private javax.swing.JMenu menuSistema;
    private javax.swing.JMenu menuSobre;
    private javax.swing.JScrollPane painelScrollEsquerdo;
    private javax.swing.JScrollPane painelScrollPrincipal;
    private javax.swing.JSplitPane painelSplitPrincipal;
    private javax.swing.JPanel panelProduto;
    private javax.swing.JPanel panelTopBar;
    private javax.swing.JSplitPane splitPrincipalVertical;
    private javax.swing.JTextArea textDescricao;
    private javax.swing.JTextField textPesquisaProdutos;
    // End of variables declaration//GEN-END:variables

    Autenticacao autenticacao;

    {
        autenticacao = null;
    }

    private void atualizeMenu() {
        menuMercado.setEnabled(autenticacao != null);
        itemSistemaAutenticar.setEnabled(autenticacao == null);
    }

    private DefaultMutableTreeNode atualizaModeloSubcategoria(Categoria categoria) {
        DefaultMutableTreeNode modeloNodo = new DefaultMutableTreeNode(categoria);
        DefaultMutableTreeNode modeloSubNodo;
        for (Categoria subCategoria: categoria.getSubcategorias()) {
            modeloSubNodo = atualizaModeloSubcategoria(subCategoria);
            modeloSubNodo.setAllowsChildren(true);
            modeloNodo.add(modeloSubNodo);
        }
        for (Produto produto: categoria.getProdutos()) {
            modeloSubNodo = new DefaultMutableTreeNode(produto);
            modeloSubNodo.setAllowsChildren(false);
            modeloNodo.add(modeloSubNodo);
        }
        return modeloNodo;
    }

    private void atualizaArvoreCategorias() {
        DefaultMutableTreeNode modeloNodoRaiz = atualizaModeloSubcategoria(model.getCategoriaRaiz());
        DefaultTreeModel modeloArvore = new DefaultTreeModel(modeloNodoRaiz);
        arvoreCategorias.setModel(modeloArvore);
    }
}
